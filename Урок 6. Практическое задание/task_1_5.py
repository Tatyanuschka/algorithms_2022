"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для пятого скрипта
Курс Алгоритмы и структуры Python: Урок 9, задание 2

Реализовать класс Road (дорога).
определить атрибуты: length (длина), width (ширина);
значения атрибутов должны передаваться при создании экземпляра класса;
атрибуты сделать защищёнными;
определить метод расчёта массы асфальта, необходимого для покрытия всей дороги;
"""
from memory_profiler import profile
from pympler import asizeof


class Road:

    @profile
    def __init__(self, length, width):
        self._length = length
        self._width = width

    @profile
    def mass_calc(self, mass_one_meter=25, thick=5):
        return self._width * self._length * mass_one_meter * thick / 1000


class Road2:

    __slots__ = '_length', '_width'

    @profile
    def __init__(self, length, width):
        self._length = length
        self._width = width

    @profile
    def mass_calc(self, mass_one_meter=25, thick=5):
        return self._width * self._length * mass_one_meter * thick / 1000


road = Road(100, 20)
print(road.mass_calc())
road2 = Road2(100, 20)
print(road2.mass_calc())
print(f'Размер объекта до оптимизации = {asizeof.asizeof(road)}')
print(f'Размер объекта после оптимизации = {asizeof.asizeof(road2)}')
